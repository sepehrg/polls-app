# Generated by Django 4.2.16 on 2025-08-13 04:12

from django.db import migrations
from django.utils import timezone


def create_sample_polls(apps, schema_editor):
    """Create sample poll data"""
    Question = apps.get_model("polls", "Question")
    Choice = apps.get_model("polls", "Choice")
    
    # Only create sample data if no questions exist
    if Question.objects.exists():
        return
    
    # Sample poll 1: What's your favorite programming language?
    q1 = Question.objects.create(
        question_text="What's your favorite programming language?",
        pub_date=timezone.now()
    )
    
    Choice.objects.create(question=q1, choice_text="Python", votes=0)
    Choice.objects.create(question=q1, choice_text="JavaScript", votes=0)
    Choice.objects.create(question=q1, choice_text="Java", votes=0)
    Choice.objects.create(question=q1, choice_text="C++", votes=0)
    Choice.objects.create(question=q1, choice_text="Go", votes=0)
    
    # Sample poll 2: What's your preferred way to learn coding?
    q2 = Question.objects.create(
        question_text="What's your preferred way to learn coding?",
        pub_date=timezone.now()
    )
    
    Choice.objects.create(question=q2, choice_text="Online tutorials", votes=0)
    Choice.objects.create(question=q2, choice_text="Books", votes=0)
    Choice.objects.create(question=q2, choice_text="Bootcamps", votes=0)
    Choice.objects.create(question=q2, choice_text="University courses", votes=0)
    Choice.objects.create(question=q2, choice_text="Practice projects", votes=0)
    
    # Sample poll 3: Which framework do you prefer for web development?
    q3 = Question.objects.create(
        question_text="Which framework do you prefer for web development?",
        pub_date=timezone.now()
    )
    
    Choice.objects.create(question=q3, choice_text="Django", votes=0)
    Choice.objects.create(question=q3, choice_text="React", votes=0)
    Choice.objects.create(question=q3, choice_text="Vue.js", votes=0)
    Choice.objects.create(question=q3, choice_text="Angular", votes=0)
    Choice.objects.create(question=q3, choice_text="Flask", votes=0)


def remove_sample_polls(apps, schema_editor):
    """Remove sample poll data (reverse migration)"""
    Question = apps.get_model("polls", "Question")
    
    # Delete the sample questions (choices will cascade)
    sample_questions = [
        "What's your favorite programming language?",
        "What's your preferred way to learn coding?", 
        "Which framework do you prefer for web development?"
    ]
    
    Question.objects.filter(question_text__in=sample_questions).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("polls", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_sample_polls, remove_sample_polls),
    ]
